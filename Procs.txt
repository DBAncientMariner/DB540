CREATE OR REPLACE
PROCEDURE CSC_InsertCourseForStudent
( var_student_Id IN NUMBER
, var_csc_course_token IN Varchar2
)
IS
var_class_surr number;
var_role number;
var_count number;
Begin

Select ROLE_ID into var_role from csc_role where ROLE_NAME = 'Student';

Select count(*) into var_count FROM csc_course co, csc_class cl,csc_user_role ur
where co.CSC_COURSE_COURSE_ID = cl.CSC_CLASS_COURSE_ID
and cl.CSC_CLASS_SURR_KEY = ur.CSC_U_R_CLASS_SURR_KEY
and co.CSC_COURSE_TOKEN = var_csc_course_token
and ur.user_role_user_id = var_student_Id
and ur.USER_ROLE_ROLE_ID = var_role;

IF var_count = 0 THEN
  update csc_course
  set CSC_COURSE_NUMBER_OF_STUDENTS=CSC_COURSE_NUMBER_OF_STUDENTS+1
  where csc_course_token=var_csc_course_token and CSC_COURSE_MAX_ENROLL_NO>CSC_COURSE_NUMBER_OF_STUDENTS;
  
  Select CSC_CLASS_SURR_KEY into var_class_surr FROM csc_course co, csc_class cl
  where co.CSC_COURSE_COURSE_ID = cl.CSC_CLASS_COURSE_ID
  and co.CSC_COURSE_TOKEN = var_csc_course_token;
  
  Insert into CSC_USER_ROLE(USER_ROLE_USER_ID,USER_ROLE_ROLE_ID,CSC_U_R_CLASS_SURR_KEY)
  values (var_student_Id,var_role,var_class_surr);
  commit;
END IF;
END;

CREATE OR REPLACE
PROCEDURE CSC_InsertUserAttempSubmit
( user_id IN number,
exercise_id IN number,
score IN Number,
var_UA_surr_key OUT NUMBER
)
AS
var_attemp_id number;
var_no_of_attemp number;
BEGIN
Select count(*) INTO var_no_of_attemp from CSC_USER_ATTEMPT
where UA_USER_ID = user_id
and UA_EXERCISE_ID = exercise_id;
var_attemp_id := var_no_of_attemp+1;
INSERT INTO CSC_USER_ATTEMPT (UA_ID,UA_USER_ID ,UA_EXERCISE_ID ,UA_STARTATTEMPT_DATE ,UA_SUBMITTED ,UA_SCORE,ATTEMP_ID)
VALUES(CSC_USER_ATTEMPT_SEQUENCE.nextval,user_id,exercise_id,SYSDATE,'T',score,var_attemp_id);
var_UA_surr_key := CSC_USER_ATTEMPT_SEQUENCE.currval;
END;